name: learn-github-actions
on:
  push:
env:
  appname: MyAppName

jobs:
  echos_everytime:
    runs-on: windows-latest
    steps:
      - name: echos
        shell: bash
        run: |
          echo "Start Actions1"
          echo "env.appname=${{ env.appname }}"
          echo $RELEASE_VERSION
          echo repo=${{ github.repository }}
          echo repo2=${{ github.event.repository.name }}
          echo ref_=${{ github.ref }}
          echo href=${{ github.head_ref }}
          echo sha_=${{ github.sha }}
          echo workspace=${{ github.workspace }}
          echo tag_=${GITHUB_REF#refs/*/}
          echo REF1=$GITHUB_REF
          echo REF3=${GITHUB_REF##*/}
          echo REF4=${GITHUB_REF/refs\/tags\/v/}
          echo version=${GITHUB_REF/refs\/tags\/v/}
          echo "vtag=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "repo=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
          echo "env.repo(notyet)=${{ env.repo }}"
          echo "env.version(notyet)=${{ env.version }}"
          echo "env.vtag(notyet)=${{ env.vtag }}"

      - name: echos2
        shell: bash
        run: |
          echo "Start Actions2"
          echo "env.repo=${{ env.repo }}"
          echo "env.version=${{ env.version }}"
          echo "env.vtag=${{ env.vtag }}"

      - name: Save output
        shell: bash
        run: |
          expr 1 + 1 > output_${{ env.vtag }}.log

      - uses: actions/upload-artifact@v1
        with:
          name: output_${{ env.vtag }}-log-file
          path: output_${{ env.vtag }}.log

  second_release:
    runs-on: windows-latest
    needs: echos_everytime
    if: "contains( github.ref , 'v')"
    steps:
      - name: echos
        shell: bash
        run: |
          echo "env.appname=${{ env.appname }}"
          echo "write repo and version to env"
          echo "vtag=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "repo=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      - uses: actions/download-artifact@v2
        with:
          name: output_${{ env.vtag }}-log-file

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{ env.version }}
          release_name: Version ${{ env.version }}
          body: |
            - hogehoge
            - homuhomu
          draft: true
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output_${{ env.vtag }}.log
          asset_name: output_${{ env.vtag }}-log-file
          asset_content_type: application/zip
